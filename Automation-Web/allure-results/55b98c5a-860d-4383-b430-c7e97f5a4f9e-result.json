{"name": "test_register_and_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button id=\"register\" type=\"button\" class=\"btn btn-primary\">...</button> is not clickable at point (1121, 546). Other element would receive the click: <iframe title=\"recaptcha challenge expires in two minutes\" name=\"c-tiqst03wk0ag\" frameborder=\"0\" scrolling=\"no\" sandbox=\"allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation\" src=\"https://www.google.com/recaptcha/api2/bframe?hl=en&amp;v=XrIDux0s7SoNe6_IHkjGC92W&amp;k=6LdsKacZAAAAAIxY1X8GuHZljebmKWs8JGp97UK7&amp;bft=0dAFcWeA7ITzFJxTp0lUUlbnKYnXtlhPe1GZQ1XhMN4RbB9TJTmUrzvQ7IUyFmsgOJbuw79KK2YjHeQqOQEMb3Ddgp_bzH0POj6g\" style=\"width: 400px; height: 580px;\"></iframe>\n  (Session info: chrome=140.0.7339.208); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n0   chromedriver                        0x000000010e516f08 chromedriver + 5934856\n1   chromedriver                        0x000000010e50ec9a chromedriver + 5901466\n2   chromedriver                        0x000000010dfdaade chromedriver + 445150\n3   chromedriver                        0x000000010e0382ef chromedriver + 828143\n4   chromedriver                        0x000000010e036046 chromedriver + 819270\n5   chromedriver                        0x000000010e0330dd chromedriver + 807133\n6   chromedriver                        0x000000010e03222d chromedriver + 803373\n7   chromedriver                        0x000000010e023f92 chromedriver + 745362\n8   chromedriver                        0x000000010e058732 chromedriver + 960306\n9   chromedriver                        0x000000010e0238c8 chromedriver + 743624\n10  chromedriver                        0x000000010e0588ee chromedriver + 960750\n11  chromedriver                        0x000000010e07e0e1 chromedriver + 1114337\n12  chromedriver                        0x000000010e058503 chromedriver + 959747\n13  chromedriver                        0x000000010e021731 chromedriver + 735025\n14  chromedriver                        0x000000010e022ee1 chromedriver + 741089\n15  chromedriver                        0x000000010e4e0360 chromedriver + 5710688\n16  chromedriver                        0x000000010e4e2c00 chromedriver + 5721088\n17  chromedriver                        0x000000010e4e277b chromedriver + 5719931\n18  chromedriver                        0x000000010e4e30a5 chromedriver + 5722277\n19  chromedriver                        0x000000010e4c5e97 chromedriver + 5602967\n20  chromedriver                        0x000000010e4e3372 chromedriver + 5722994\n21  chromedriver                        0x000000010e4b9584 chromedriver + 5551492\n22  chromedriver                        0x000000010e4fed28 chromedriver + 5836072\n23  chromedriver                        0x000000010e4fee85 chromedriver + 5836421\n24  chromedriver                        0x000000010e50e823 chromedriver + 5900323\n25  libsystem_pthread.dylib             0x00007ff81aad4e59 _pthread_start + 115\n26  libsystem_pthread.dylib             0x00007ff81aad0857 thread_start + 15", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"099b1bc8623279ff4c3f6bb0ada3fa7a\")>\n\n    def test_register_and_login(driver):\n        register_page = RegisterPage(driver)\n        register_page.navigate()\n    \n        first_name = \"Victor\"\n        last_name = \"Lima\"\n        user_name = \"victolvrr\"\n        password = \"Victor123!\"\n        register_page.fill_form(first_name, last_name, user_name, password)\n    \n        register_page.wait_for_captcha()\n>       register_page.click_register()\n\ntests/test_login.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/login_pages.py:28: in click_register\n    self.driver.find_element(*self.REGISTER_BUTTON).click()\nmyproject/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:120: in click\n    self._execute(Command.CLICK_ELEMENT)\nmyproject/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:573: in _execute\n    return self._parent.execute(command, params)\nmyproject/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x110f935b0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...ff81aad4e59 _pthread_start + 115\\\\n26  libsystem_pthread.dylib             0x00007ff81aad0857 thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button id=\"register\" type=\"button\" class=\"btn btn-primary\">...</button> is not clickable at point (1121, 546). Other element would receive the click: <iframe title=\"recaptcha challenge expires in two minutes\" name=\"c-tiqst03wk0ag\" frameborder=\"0\" scrolling=\"no\" sandbox=\"allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox allow-storage-access-by-user-activation\" src=\"https://www.google.com/recaptcha/api2/bframe?hl=en&amp;v=XrIDux0s7SoNe6_IHkjGC92W&amp;k=6LdsKacZAAAAAIxY1X8GuHZljebmKWs8JGp97UK7&amp;bft=0dAFcWeA7ITzFJxTp0lUUlbnKYnXtlhPe1GZQ1XhMN4RbB9TJTmUrzvQ7IUyFmsgOJbuw79KK2YjHeQqOQEMb3Ddgp_bzH0POj6g\" style=\"width: 400px; height: 580px;\"></iframe>\nE         (Session info: chrome=140.0.7339.208); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nE       Stacktrace:\nE       0   chromedriver                        0x000000010e516f08 chromedriver + 5934856\nE       1   chromedriver                        0x000000010e50ec9a chromedriver + 5901466\nE       2   chromedriver                        0x000000010dfdaade chromedriver + 445150\nE       3   chromedriver                        0x000000010e0382ef chromedriver + 828143\nE       4   chromedriver                        0x000000010e036046 chromedriver + 819270\nE       5   chromedriver                        0x000000010e0330dd chromedriver + 807133\nE       6   chromedriver                        0x000000010e03222d chromedriver + 803373\nE       7   chromedriver                        0x000000010e023f92 chromedriver + 745362\nE       8   chromedriver                        0x000000010e058732 chromedriver + 960306\nE       9   chromedriver                        0x000000010e0238c8 chromedriver + 743624\nE       10  chromedriver                        0x000000010e0588ee chromedriver + 960750\nE       11  chromedriver                        0x000000010e07e0e1 chromedriver + 1114337\nE       12  chromedriver                        0x000000010e058503 chromedriver + 959747\nE       13  chromedriver                        0x000000010e021731 chromedriver + 735025\nE       14  chromedriver                        0x000000010e022ee1 chromedriver + 741089\nE       15  chromedriver                        0x000000010e4e0360 chromedriver + 5710688\nE       16  chromedriver                        0x000000010e4e2c00 chromedriver + 5721088\nE       17  chromedriver                        0x000000010e4e277b chromedriver + 5719931\nE       18  chromedriver                        0x000000010e4e30a5 chromedriver + 5722277\nE       19  chromedriver                        0x000000010e4c5e97 chromedriver + 5602967\nE       20  chromedriver                        0x000000010e4e3372 chromedriver + 5722994\nE       21  chromedriver                        0x000000010e4b9584 chromedriver + 5551492\nE       22  chromedriver                        0x000000010e4fed28 chromedriver + 5836072\nE       23  chromedriver                        0x000000010e4fee85 chromedriver + 5836421\nE       24  chromedriver                        0x000000010e50e823 chromedriver + 5900323\nE       25  libsystem_pthread.dylib             0x00007ff81aad4e59 _pthread_start + 115\nE       26  libsystem_pthread.dylib             0x00007ff81aad0857 thread_start + 15\n\nmyproject/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:232: ElementClickInterceptedException"}, "attachments": [{"name": "stdout", "source": "6d5cbf94-0270-43d6-8167-2569fe2ff57c-attachment.txt", "type": "text/plain"}], "start": 1759235261191, "stop": 1759235271598, "uuid": "53231ba0-8e87-4d67-89ef-4e267ed13d7a", "historyId": "250d75a20d190e00955083a78efde06d", "testCaseId": "250d75a20d190e00955083a78efde06d", "fullName": "tests.test_login#test_register_and_login", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "EU3146030016220.local"}, {"name": "thread", "value": "48864-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}], "titlePath": ["tests", "test_login.py"]}